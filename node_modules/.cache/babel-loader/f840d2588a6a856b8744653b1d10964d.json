{"ast":null,"code":"import _slicedToArray from \"/home/ali/after-bootcamp/eComerace/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ali/after-bootcamp/eComerace/src/context/cart.js\";\n// cart context\nimport React, { useEffect, useState } from \"react\";\nimport localCart from \"../utils/localCart\";\nconst CartContext = React.createContext();\n\nfunction CartProvider({\n  children\n}) {\n  const _useState = useState(localCart),\n        _useState2 = _slicedToArray(_useState, 2),\n        cart = _useState2[0],\n        setCart = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        total = _useState4[0],\n        setToal = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cartItem = _useState6[0],\n        setCartItem = _useState6[1];\n\n  useEffect(() => {\n    let newCartItem = cart.reduce((acc, cur) => {\n      return acc = acc + cur.amount;\n    }, 0);\n    setCartItem(newCartItem);\n    let newTotal = cart.reduce((acc, cur) => {\n      return acc = acc + cur.amount * cur.price;\n    }, 0);\n    newTotal = parseFloat(newTotal.toFixed(2));\n    setToal(newTotal);\n  }, [cart]);\n\n  const removeItem = id => {\n    const newCart = cart.filter(item => {\n      if (item.id !== id) return item;\n    });\n    setCart(newCart);\n  };\n\n  const increaseItem = id => {\n    const newCart = cart.map(item => {});\n  };\n\n  const decreaseItem = id => {};\n\n  const addToCart = product => {};\n\n  const clearCart = () => {};\n\n  return React.createElement(CartContext.Provider, {\n    value: {\n      cart,\n      total,\n      cartItem,\n      removeItem,\n      increaseItem,\n      decreaseItem,\n      addToCart,\n      clearCart\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, children);\n}\n\nexport { CartContext, CartProvider };","map":{"version":3,"sources":["/home/ali/after-bootcamp/eComerace/src/context/cart.js"],"names":["React","useEffect","useState","localCart","CartContext","createContext","CartProvider","children","cart","setCart","total","setToal","cartItem","setCartItem","newCartItem","reduce","acc","cur","amount","newTotal","price","parseFloat","toFixed","removeItem","id","newCart","filter","item","increaseItem","map","decreaseItem","addToCart","product","clearCart"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAN,EAApB;;AACA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA,oBACVL,QAAQ,CAACC,SAAD,CADE;AAAA;AAAA,QAC3BK,IAD2B;AAAA,QACrBC,OADqB;;AAAA,qBAGTP,QAAQ,CAAC,CAAD,CAHC;AAAA;AAAA,QAG3BQ,KAH2B;AAAA,QAGpBC,OAHoB;;AAAA,qBAIFT,QAAQ,CAAC,CAAD,CAJN;AAAA;AAAA,QAI3BU,QAJ2B;AAAA,QAIjBC,WAJiB;;AAKlCZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,WAAW,GAAGN,IAAI,CAACO,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1C,aAAQD,GAAG,GAAGA,GAAG,GAAGC,GAAG,CAACC,MAAxB;AACD,KAFiB,EAEf,CAFe,CAAlB;AAGAL,IAAAA,WAAW,CAACC,WAAD,CAAX;AACA,QAAIK,QAAQ,GAAGX,IAAI,CAACO,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvC,aAAQD,GAAG,GAAGA,GAAG,GAAGC,GAAG,CAACC,MAAJ,GAAaD,GAAG,CAACG,KAArC;AACD,KAFc,EAEZ,CAFY,CAAf;AAGAD,IAAAA,QAAQ,GAAGE,UAAU,CAACF,QAAQ,CAACG,OAAT,CAAiB,CAAjB,CAAD,CAArB;AACAX,IAAAA,OAAO,CAACQ,QAAD,CAAP;AACD,GAVQ,EAUN,CAACX,IAAD,CAVM,CAAT;;AAWA,QAAMe,UAAU,GAAIC,EAAD,IAAQ;AACzB,UAAMC,OAAO,GAAGjB,IAAI,CAACkB,MAAL,CAAaC,IAAD,IAAU;AACpC,UAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB,OAAOG,IAAP;AACrB,KAFe,CAAhB;AAGAlB,IAAAA,OAAO,CAACgB,OAAD,CAAP;AACD,GALD;;AAMA,QAAMG,YAAY,GAAIJ,EAAD,IAAQ;AAC3B,UAAMC,OAAO,GAACjB,IAAI,CAACqB,GAAL,CAASF,IAAI,IAAE,CAE5B,CAFa,CAAd;AAGD,GAJD;;AAKA,QAAMG,YAAY,GAAIN,EAAD,IAAQ,CAAE,CAA/B;;AACA,QAAMO,SAAS,GAAIC,OAAD,IAAa,CAAE,CAAjC;;AACA,QAAMC,SAAS,GAAG,MAAM,CAAE,CAA1B;;AACA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLzB,MAAAA,IADK;AAELE,MAAAA,KAFK;AAGLE,MAAAA,QAHK;AAILW,MAAAA,UAJK;AAKLK,MAAAA,YALK;AAMLE,MAAAA,YANK;AAOLC,MAAAA,SAPK;AAQLE,MAAAA;AARK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG1B,QAZH,CADF;AAgBD;;AACD,SAASH,WAAT,EAAsBE,YAAtB","sourcesContent":["// cart context\nimport React, { useEffect, useState } from \"react\";\nimport localCart from \"../utils/localCart\";\nconst CartContext = React.createContext();\nfunction CartProvider({ children }) {\n  const [cart, setCart] = useState(localCart);\n\n  const [total, setToal] = useState(0);\n  const [cartItem, setCartItem] = useState(0);\n  useEffect(() => {\n    let newCartItem = cart.reduce((acc, cur) => {\n      return (acc = acc + cur.amount);\n    }, 0);\n    setCartItem(newCartItem);\n    let newTotal = cart.reduce((acc, cur) => {\n      return (acc = acc + cur.amount * cur.price);\n    }, 0);\n    newTotal = parseFloat(newTotal.toFixed(2));\n    setToal(newTotal);\n  }, [cart]);\n  const removeItem = (id) => {\n    const newCart = cart.filter((item) => {\n      if (item.id !== id) return item;\n    });\n    setCart(newCart);\n  };\n  const increaseItem = (id) => {\n    const newCart=cart.map(item=>{\n      \n    })\n  };\n  const decreaseItem = (id) => {};\n  const addToCart = (product) => {};\n  const clearCart = () => {};\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        total,\n        cartItem,\n        removeItem,\n        increaseItem,\n        decreaseItem,\n        addToCart,\n        clearCart,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\nexport { CartContext, CartProvider };\n"]},"metadata":{},"sourceType":"module"}